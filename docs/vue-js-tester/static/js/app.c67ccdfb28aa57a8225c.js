webpackJsonp([1],{"4/hK":function(e,n){},Fi4r:function(e,n){},NHnr:function(e,n,r){"use strict";function t(e){r("kOSn")}function o(e){r("OeGn")}function s(e){r("Fi4r")}function a(e){r("g1Pw")}Object.defineProperty(n,"__esModule",{value:!0});var i=r("7+uW"),c=[{question:"Як працює процедура Continue?",correct:2,answers:["виконання програми переходить на наступний рядок","нічого не відбувається","здійснює перехід до початку чергової ітерації циклу","зупиняє виконання програми","виконує безумовний вихід із циклу"]},{question:"Як працює процедура Break?",correct:4,answers:["виконання програми переходить на наступний рядок","нічого не відбувається","здійснює перехід до початку чергової ітерації циклу","зупиняє виконання програми","виконує безумовний вихід із циклу"]},{question:"Як позначається вказівник, який нікуди не вказує?",correct:1,answers:["Nope","Nil","Null","Undefined","Unknown"]},{question:"Як динамічно виділити пам'ять по вказівнику T?",correct:2,answers:["create(T)","allocate(T)","new(T)","mem(T)","place(T)"]},{question:"Як динамічно звільними пам'ять по вказівнику T?",correct:2,answers:["free(T)","delete(T)","dispose(T)","clean(T)","clear(T)"]},{question:"Як оголосити вказівник car1 на тип TCar?",correct:4,answers:["Var car1:TCar","Var car1:@TCar","Var car1->TCar","Var car1^:TCar","Var car1:^TCar"]},{question:"Як отримати доступ до даних, що знаходяться в ділянці пам'яті, на яку вказує вказівник T?",correct:0,answers:["записати знак ^ після вказівника: T^","записати знак ^ перед вказівником: ^T","записати знак @ перед вказівником: @T","записати символи -> після вказівника: T->","викокистовувати T в якості даних"]},{question:"Як в мові Pascal оголосити нетипований вказівник?",correct:3,answers:["Var Р1 : PTR;","Var Р1 : Address;","Var Р1 : Link;","Var Р1 : Pointer;","Var Р1 : Memory;"]},{question:"Як в мові Pascal маючи змінну A дізнатися її адресу в пам'яті?",correct:2,answers:["P2:=Address(A);","P2:=WhereIs(A);","P2:=Addr(A);","P2:=Find(A);","P2:=Lookup(A);"]},{question:"Чим відрізняється функція від процедури?",correct:0,answers:["З іменем функції пов’язана певна комірка пам’яті, в яку засилається один з результатів роботи цієї програми, а з іменем процедури ні.","Нічим не відрізняється","Різниця лише в синтаксисі","Процедури виконуються швидше","Функції можуть бути рекурсивними, а процедури не можуть"]},{question:"Назвіть всі типи текстових даних в мові Pascal",correct:1,answers:["один рядковий тип даних string","два типи: символьний char та рядковий string","один символьний тип даних char","два типи: символьний CharArray та рядковий string","типи char, word, string"]},{question:"Як оголосити перерахунковий тип?",correct:2,answers:["type Color = { White, Green, Blue };","type Color = [ White, Green, Blue ];","type Color = ( White, Green, Blue );","type Color = White, Green, Blue;","type Color = < White, Green, Blue >;"]},{question:"Як оголосити діапазонний тип?",correct:3,answers:["Letters = from ’A’ till ’Z’;","Letters = ’A’ - ’Z’;","Letters = ’A’...’Z’;","Letters = ’A’..’Z’;","Letters = ’A’ goto ’Z’;"]},{question:"Знайдіть слово, що не є зарервованим?",correct:4,answers:["with","type","file","record","field"]},{question:"Як утворити багаторядковий коментар?",correct:0,answers:["(* коментар *)","<% коментар %>","[- коментар -]","\x3c!-- коментар --\x3e","// коментар"]},{question:"Виберіть правильне ім'я змінної",correct:1,answers:["АН-140","X_new","1X","_AAA","Old+Value"]},{question:"Розділ операторів",correct:2,answers:["починається зі слова exec","починається зі слова start","починається зі слова begin","починається зі слова go","починається зі символу {"]},{question:"Розділ операторів",correct:2,answers:["закінчується словом done","закінчується словом stop","закінчується словом end","закінчується словом exit","закінчується символом }"]},{question:"Як оголосити динамічний масив?",correct:3,answers:["var mas: array real;","var mas: [] of real;","var mas: real[];","var mas: array of real;","var mas: real array;"]},{question:"Як встановити довжину 10 динамічному масиву mas?",correct:4,answers:["Memset(mas, 10);","Allocate(mas, 10);","SetLen(mas, 10);","Length(mas, 10);","SetLength(mas, 10);"]},{question:"Команда CLRSCR служить для",correct:0,answers:["очищення екрану","очікування натиску клавіші","виходу з програми","генерації випадкового числа","немає правильної відповіді"]},{question:"Розділ VAR служить для",correct:1,answers:["опису констант","опису використовуваних змінних","опису виразів","опису типів даних","немає правильної відповіді"]},{question:"Змінні - це",correct:2,answers:["літерали","зарезервовані слова","величини, які можуть змінювати своє значення в процесі виконання програми","величини, які не можуть змінювати своє значення в процесі виконання програми","немає правильної відповіді"]},{question:"Оператором циклу не є",correct:3,answers:["While...","For...","Case...","Repeat...","немає правильної відповіді"]},{question:"Виберіть оператор вибору",correct:4,answers:["While","For","Repeat","Case","немає правильної відповіді"]},{question:"Який з циклів не містить логічної умови?",correct:0,answers:["For...","While...","Repeat...","всі містять","немає правильної відповіді"]},{question:"Як оголосити власну структуру даних для представлення трьохвимірної координати?",correct:1,answers:["type Point3D:record x,y,z:integer; end;","type Point3D=record x,y,z:integer; end;","type Point3D:struct x,y,z:integer; end;","type Point3D=struct x,y,z:integer; end;","type Point3D=record x,y,z:integer;"]},{question:"Як виглядає оператор присвоєння у pascal?",correct:2,answers:["==","=",":=","<-","=:"]},{question:"Для чого призначений оператор WITH <Змінна типу RECORD> DO ...?",correct:3,answers:["такий оператор неприпустимий","для оголошення змінної типу RECORD","для організації циклу по всіх полях типу RECORD","для полегшення доступу до полів типу RECORD","немає правильної відповіді"]},{question:"Вивід даних виконується за допомогою оператора",correct:4,answers:["PROGRAM","ECHO","OUTPUT","PRINT, PRINTLN","WRITE, WRITELN"]}],l=r("M4fF"),v=r.n(l),u={data:function(){return{testData:c,shownTests:[],N:10,score:0,showScore:!1}},methods:{gen:function(){v.a.each(this.testData,function(e){e.selected=void 0}),this.shownTests=v.a.shuffle(this.testData).slice(0,this.N),this.showScore=!1},check:function(){var e=this;this.score=0,v.a.each(this.shownTests,function(n){n.selected===n.correct&&e.score++}),this.showScore=!0},results:function(){var e="Вірно "+this.score+" з "+this.N+". ";return this.score===this.N&&(e+="Абсолютно вірно, вітаємо!"),e},klass:function(e){return this.showScore?{correct:e.selected===e.correct,wrong:e.selected!==e.correct}:{}}},mounted:function(){this.gen()}},d=function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",{staticStyle:{"text-align":"center"}},[r("button",{on:{click:function(n){e.gen()}}},[e._v("Скласти тести")]),e._v(" "),r("h2",[e._v("Тести")]),e._v(" "),e._l(e.shownTests,function(n,t){return r("div",{staticClass:"box",class:e.klass(n)},[e._v("\n    "+e._s(t+1+". "+n.question)+"\n    "),r("br"),e._v(" "),e._l(n.answers,function(o,s){return[r("input",{directives:[{name:"model",rawName:"v-model",value:n.selected,expression:"test.selected"}],attrs:{type:"radio",name:t},domProps:{value:s,checked:e._q(n.selected,s)},on:{change:function(r){e.$set(n,"selected",s)}}}),e._v(" "),r("label",[e._v(e._s(o))]),e._v(" "),r("br")]})],2)}),e._v(" "),e.showScore?r("label",[e._v(e._s(e.results()))]):e._e(),e._v(" "),r("br"),e._v(" "),r("button",{on:{click:e.check}},[e._v("Перевірка")])],2)},p=[],_={render:d,staticRenderFns:p},h=_,f=r("VU/8"),T=t,w=f(u,h,!1,T,"data-v-28a996da",null),m=w.exports,g=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},P=[function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",{staticClass:"theory"},[r("h2",{staticStyle:{"text-align":"center"}},[e._v("\n      Теоретичні відомості\n    ")]),e._v(" "),r("p",[e._v("\n      В процесі компіляції програми для змінних виділяється пам'ять конкретного розміру, яка зберігається за змінними на\n      весь період роботи програми. Такі змінні є статичними, доступ до відповідних областей пам’яті здійснюється за їх\n      іменами.\n      Такий спосіб не є ефективним, особливо коли невідомо які розміри пам'яті потрібні для зберігання даних. Змінні,\n      які з'являються в процесі роботи програми або їх розмір може змінюватись при її роботі називають динамічними\n      змінними.\n      Для таких даних пам'ять виділяється на етапі виконання програми, крім того, така пам'ять може бути визволеною ще\n      до кінця програми.\n      Динамічна змінна явно не описується, до неї не­має доступу по імені. Замість цього використо­вується спеціальна\n      змінна - вказівник, значенням якого є адреса пам'яті, де роз­міщується динамічний об'єкт.\n      Вказівники можна описувати в програмі з допомогою символу ^, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  Var Vkaz1,Vkaz2:^Integer;\n  R,Т:^Rеа1;\n")]),e._v(" "),r("p",[e._v("\n      Такий опис ще не виділяє пам'ять для змінних, він тільки означає, що змінні Vkaz1 та Vkaz2 є вка­зівниками на дані\n      цілого типу, а змінні R і Т - вказівники на дійсне дане.\n      Виділення пам'яті здійснюється спеціальним опе­ратором New, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  New(T);\n    ")]),e._v(" "),r("p",[e._v("Після цієї операції вказівник Т придбає значення адреси пам'яті для дійсної змінної. Щоб отримати доступ до цієї\n      області пам'яті, треба знак ^ записати після вказівника, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  Т^;=16.4;\n  Writeln(T^);\n      ")]),e._v(" "),r("p",[e._v("\n\n      Над динамічними змінними можна виконувати такі ж операції, як і над статичними, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  R^:=T^+20;\n  If R^<30 Then T^:=40;\n")]),e._v(" "),r("p",[e._v("\n      Вказівники, в свою чергу, можна тільки присвоювати один одному та порівнювати на рівність чи нерівність між собою,\n      наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  T:=R;\n  If T<>R Then T:=Nil;\n  ")]),e._v(" "),r("p",[e._v("\n      Треба бути уважними при вживанні динамічних змінних та вказівників. Розглянемо приклад фрагменту програми:\n    ")]),e._v(" "),r("pre",[e._v("  R^:=10.5;\n  T^:=16.2;\n  R:=T;\n")]),e._v(" "),r("p",[e._v("\n      Якщо замість останнього оператору вжити опера­тор R^:=Т^, то вказівники будуть зв'язані з різними комірками\n      пам'яті, в яких записано одне й теж число 16.2.\n      Динамічною змінною може бути також рядок або масив, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  Type Strichka=String[50];\n  Mas=Array[1..40] of Real;\n  Var VkazStr:^Strichka;\n  VkazMas:^Mas;\n    ")]),e._v(" "),r("p",[e._v("\n      Якщо треба виділити пам'ять під масив достатньо виконати оператор:\n    ")]),e._v(" "),r("pre",[e._v("  New(VkazMas)\n")]),e._v(" "),r("p",[e._v("\n      Тепер в циклі можна ввести значення його елементів:\n    ")]),e._v(" "),r("pre",[e._v("  For i:=l to 40 do Read(VkazMas^[i]);\n")]),e._v(" "),r("p",[e._v("\n      Як бачимо, до елементу масиву можна звертатися, вживаючи ім'я VkazMas^[i].\n      Якщо в процесі виконання програми яка-небудь змінна стане непотрібною, її можна вилучити з пам'яті за допомогою\n      оператора Dispose, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  Dispose(VkazMas);\n")]),e._v(" "),r("p",[e._v("\n      Це значить, що пам’ять, яка була виділена під масив звільнена, а сам вказівник VkazMas матиме невизначене\n      значення.\n      Подібна операція буває корисною при необхідності економити пам’ять.\n      В мові Pascal можна, також використовувати нетиповані вказівними, які, на відміну від типова них, не зв’язані з\n      конкретним типом. Такі вказівники описують, вживаючи слово Pointer, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  Var Р1, Р2 : Pointer;\n")]),e._v(" "),r("p",[e._v("\n      Ці вказівники сумісні з будь-якими типованими вказівниками, тобто вказівник Р1 може одержати, як значення\n      вказівника на ціле число, так і значення вказівника на дійсне число.\n      Нетипований вказівник може одержати значення одним з декількох способів.\n      ІІроцедура GetMem(P1,Size) виділить пам'ять розміром Size байтів, вказівник Р1 матиме значення адреси початку\n      такої пам'яті (величина Size обмеже­на числом 64К). Це нерідко вживають для зберігання фрагментів зображення на\n      екрані дисплею. Звільнення такої пам'яті виконує процедура FreeMem(Pl,Size).\n      Функція Addr визначає адресу свого аргументу (змінної або підпрограми), наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  P2:=Addr(A);\n")]),e._v(" "),r("p",[e._v("\n      Таку операцію використовують, наприклад, при заміні стандартної підпрограми обробки переривання на «свою»\n      підпрограму.\n      Функція Ptr перетворить свій аргумент-адресу в значення вказівника, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  P1:=Ptrt($1234,$4567);\n")]),e._v(" "),r("p",[e._v(" Нетипованому вказівнику можна присвоїти значення спеціальної функції Nil, наприклад:\n    ")]),e._v(" "),r("pre",[e._v("  P1:=NiI;\n")]),e._v(" "),r("p",[e._v("\n      Функція Nil виробляє значення «пусте» (згадайте пустий рядок, пусту множину). Вона застосовується, як деяка ознака\n      кінця динамічної структури, напри­клад, кінця списку.\n      При програмуванні на мові Pascal для розміщення динамічних змінних використовується область пам'яті з назвою Heap\n      або «куча». Розмір Heap можна регулювати за допомогою директиви компілятору $М або задати при налагодженні\n      середовища (Option/Compiler/Memory size) від 0 до 65535 байт.\n      Приклад директиви:\n    ")]),e._v(" "),r("pre",[e._v("\n    {$М 20000,10000,200000}\n")]),e._v(" "),r("p",[e._v("\n      Перше число показує розмір сегмента стеку (від 1024 до 655356). Це число вибирається в за­лежності від наявності\n      та виду підпрограм. Друге число визначає найменш допустимий в даній прог­рамі розмір Heap, а останнє число -\n      найбільший розмір цієї пам'яті. Конкретні розміри Heap виби­раються в залежності від задачі та кількості\n      дина­мічних даних.\n\n    ")]),e._v(" "),r("p",[e._v("\n\n      Правила написання Pascal-програм\n    ")]),r("p",[e._v("\n1.  Основний текст будь-якої програми починається службовим словом begin і закінчується словом end, після чого слідує крапка. Без крапки програма вважається не закінченою. І навпаки, якщо в програмі знаходиться крапка, то всі команди, що слідують за нею ігноруються (оскільки програма завершена).\n  ")]),r("p",[e._v("\n\n2.  В кінці кожної команди ставиться крапка з комою (“;”) - символ, що розділяє команди між собою.\n  ")]),r("p",[e._v("\n\n3.  Після команди, яка знаходиться перед end, крапку з комою (“;”) бажано не встановлювати, оскільки буде вважатись, що перед end є ще один порожній оператор.\n  ")]),r("p",[e._v("\n\n4.  Команди в Pascal можна записувати в один рядок, хоча для полегшення читабельності програми бажано кожну команду вказувати з нового рядка.\n  ")]),r("p",[e._v("\n\n5.  Якщо користувач бажає помістити в текст програми коментарі, то їх необхідно вказувати у фігурних дужках (замість фігурних дужок можна вказувати альтернативний набір символів   - “(*     ,,,    *)” ).\n  ")]),r("p",[e._v("\n\n6.  При вказанні в програмі виразів, що містять будь-які дужки потрібно пам’ятати, що кількість закритих та відкритих дужок повинна бути однаковою.\n  ")]),r("p",[e._v("\n\n7.  Якщо потрібно використати декілька операторів у якості одного складеного оператора, то їх слід взяти в операторні дужки, що починаються словом begin і закінчуються end. При цьому кількість слів begin у програмі повинна співпадати з кількістю слів end.\n  ")]),r("p",[e._v("\n\n8.  Усі змінні, константи та типи даних, що використовуються в програмі, повинні бути описані в розділах const, type та var.\n  ")]),r("p",[e._v("\n\nНеобов'язкові але бажані правила:\n  ")]),r("p",[e._v("\n\n1.  Після команди begin всі наступні команди, аж до відповідного йому end, бажано записувати з відступом (наприклад, на величину слова begin).\n  ")]),r("p",[e._v("\n\n2. Назви всіх команд бажано записувати малими літерами, а змінні - великими.\n\n      ")])])}],R={render:g,staticRenderFns:P},N=R,y=r("VU/8"),q=o,V=y(null,N,!1,q,null,null),k=V.exports,x=r("0uOA"),A=r.n(x),C=(r("4/hK"),r("MXNw"),{data:function(){return{code:"(* Example Pascal code *)\n\nType TNode = ^Node;\n     Node = record\n        info : integer;\n        left , right : TNode;\n     end;\n \nVar root : TNode;\n    n , i , x : integer;\n \nProcedure addToTree(var root : TNode; x : integer);\nBegin\n    if root = Nil then begin\n        new(root);\n        root^.left := Nil;\n        root^.right := Nil;\n        root^.info := x;\n    end else if (root^.info > x) then\n        addToTree(root^.left, x)\n    else\n        addToTree(root^.right, x); \nEnd;\n\nProcedure writeTree(var root : TNode);\nBegin\n    if root <> Nil then begin\n        write(root^.info, ' ');\n        writeTree(root^.left);\n        writeTree(root^.right);\n    end;\nEnd;\n\n\nFunction search(node : TNode; val : integer) : string;\nBegin\n    if (node = Nil)\n    then search := 'not found'\n    else if node^.info = val \n    then search := 'present'\n    else if node^.info > val\n    then search := search(node^.left, val)\n    else search := search(node^.right, val);\nEnd;\n\nBegin\n    read(n);\n    root := Nil;\n    for i := 1 to n do begin\n        read(x);\n        addToTree(root, x);\n    end;\n    writeTree(root);\n    writeln;\n    writeln(2, ' ', search(root, 2));\n    writeln(10, ' ', search(root, 10));\nEnd.\n\n-- input 5 3 1 2 4 5\n\n",options:{mode:"pascal"}}},components:{"vue-code":A.a}}),z=function(){var e=this,n=e.$createElement;return(e._self._c||n)("vue-code",{staticStyle:{height:"100%"},attrs:{options:e.options},model:{value:e.code,callback:function(n){e.code=n},expression:"code"}})},S=[],b={render:z,staticRenderFns:S},E=b,M=r("VU/8"),O=M(C,E,!1,null,null,null),D=O.exports,F=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},W=[function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",{staticClass:"tree"},[r("img",{attrs:{src:"/static/tree.png"}})])}],L={render:F,staticRenderFns:W},$=L,B=r("VU/8"),I=s,G=B(null,$,!1,I,null,null),U=G.exports,H=[{path:"/theory",name:"Теорія",component:k},{path:"/program",name:"Код програми",component:D},{path:"/tree",name:"Ілюстрація",component:U},{path:"/",name:"Тести",component:m}],Z={name:"app",data:function(){return{components:H}}},X=function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div",{attrs:{id:"app"}},[e._l(e.components,function(n){return r("li",[r("router-link",{attrs:{to:n.path}},[r("span",[e._v(e._s(n.name))])])],1)}),e._v(" "),r("router-view")],2)},K=[],j={render:X,staticRenderFns:K},J=j,Q=r("VU/8"),Y=a,ee=Q(Z,J,!1,Y,null,null),ne=ee.exports,re=r("/ocq");i.a.use(re.a);var te=new re.a({mode:"history",routes:H});i.a.config.productionTip=!1,new i.a({el:"#app",router:te,template:"<App/>",components:{App:ne}})},OeGn:function(e,n){},g1Pw:function(e,n){},kOSn:function(e,n){}},["NHnr"]);
//# sourceMappingURL=app.c67ccdfb28aa57a8225c.js.map